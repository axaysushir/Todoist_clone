{"version":3,"sources":["component/layout/icon.svg","firebase.js","constants/index.js","helpers/index.js","context/Project-context.js","hooks/index.js","context/Selected-project-context.js","component/ProjectOverlay.js","component/TaskDate.js","component/AddTask.js","component/layout/Header.js","component/IndividualProject.js","component/Projects.js","component/AddProject.js","component/layout/Sidebar.js","component/Checkbox.js","component/Tasks.js","component/layout/Content.js","App.js","index.js"],"names":["module","exports","require","config","firebaseConfig","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","collatedTasks","key","name","collatedTasksExist","selectedProject","find","task","generatePushId","PUSH_CHARS","lastRandChars","now","Date","getTime","timeStampChars","Array","i","charAt","Math","floor","id","join","ProjectsContext","createContext","ProjectsProvider","children","useState","projects","setProjects","useEffect","firestore","collection","where","orderBy","get","then","snapshot","allProjects","docs","map","project","data","docId","JSON","stringify","useProjects","Provider","value","useProjectValue","useContext","SelectedProjectContext","SelectedProjectProvider","setSelectedProject","useSelectedProjectValue","ProjectOverlay","setProject","setShowProjectOverlay","showProjectOverlay","className","data-testid","onClick","onKeyDown","role","tabIndex","aria-label","TaskDate","setTaskDate","setShowTaskDate","showTaskDate","moment","format","add","prototype","PropTypes","func","isRequired","AddTask","showAddTaskMain","showShouldMain","showQuickAddTask","setShowQuickAddTask","setTask","taskDate","showMain","setShowMain","addTask","collatedDate","archived","date","userId","type","onChange","e","target","Header","darkMode","setDarkMode","shouldShowMain","setShouldShowMain","src","logo","alt","style","width","backgroundColor","borderRadius","IndividualProject","showConfirm","setShowConfirm","doc","delete","Projects","activeValue","active","setActive","data-doc-id","propTyeps","bool","AddProject","shouldshow","show","setShow","projectName","setProjectName","placeholder","shouldShow","Sidebar","showProjects","setShowProjects","undefined","Checkbox","taskDesc","archiveTask","update","Tasks","tasks","setTasks","archivedTasks","setArchivedTask","unsubscribe","onSnapshot","newTasks","filter","diff","useTasks","length","getTitle","getCollatedTitle","document","title","Content","App","darkModeDefault","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f43ae0c9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.a6cbd140.svg\";","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nrequire(\"dotenv\").config();\r\n\r\nconst firebaseConfig = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MSG_SEND_ID,\r\n  appId: process.env.REACT_APP_APPLI_ID,\r\n});\r\n\r\nexport { firebaseConfig as firebase };\r\n","export const collatedTasks  = [\r\n    {key: 'INBOX', name: 'Inbox'},\r\n    {key: 'TODAY', name: 'Today'},\r\n    {key: 'NEXT_7', name: 'Next 7 days'},\r\n]\r\n\r\n\r\n//. get all inbox today task from app herr","import { collatedTasks } from \"../constants\";\r\n\r\nexport const collatedTasksExist = selectedProject => ( \r\n  collatedTasks.find(task => task.key === selectedProject)\r\n)\r\n\r\nexport const getTitle = (projects, projectId) => \r\n  projects.find(project => project.projectId === projectId)\r\n\r\nexport const getCollatedTitle = (projects, key) => \r\n  projects.find(project => project.key === key)\r\n\r\nexport const generatePushId = (() => {\r\n  const PUSH_CHARS =\r\n    '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n\r\n  const lastRandChars = [];\r\n\r\n  return function() {\r\n    let now = new Date().getTime();\r\n\r\n    const timeStampChars = new Array(8);\r\n    for (var i = 7; i >= 0; i--) {\r\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n      now = Math.floor(now / 64);\r\n    }\r\n\r\n    let id = timeStampChars.join('');\r\n\r\n    for (i = 0; i < 12; i++) {\r\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n    }\r\n\r\n    return id;\r\n  };\r\n})();\r\n","import React, {createContext, useContext} from 'react'\r\nimport {useProjects} from '../hooks'\r\n\r\n//1.36\r\nexport const ProjectsContext = createContext()\r\nexport const ProjectsProvider = ({children}) => {\r\n    const  {projects, setProjects} = useProjects();\r\n\r\n    return (\r\n        <ProjectsContext.Provider value={{projects, setProjects}}>\r\n            {children}\r\n        </ProjectsContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useProjectValue = () => useContext(ProjectsContext)","import { useState, useEffect } from \"react\";\r\nimport { firebase } from \"../firebase\";\r\nimport { collatedTasksExist } from \"../helpers\";\r\nimport moment from \"moment\";\r\n\r\nexport const useTasks = selectedProject => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [archivedTasks, setArchivedTask] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let unsubscribe = firebase\r\n      .firestore()\r\n      .collection(\"tasks\")\r\n      .where(\"userId\", \"==\", \"GhIyddUBs6IpAvzrKuDh\");\r\n\r\n    unsubscribe =\r\n      selectedProject && !collatedTasksExist(selectedProject)\r\n        ? (unsubscribe = unsubscribe.where(\"projectId\", \"==\", selectedProject))\r\n        : selectedProject === \"TODAY\"\r\n        ? (unsubscribe = unsubscribe.where(\r\n            \"date\",\r\n            \"==\",\r\n            moment().format(\"DD/MM/YYYY\")\r\n          ))\r\n        : selectedProject === \"INBOX\" || selectedProject === 0\r\n        ? (unsubscribe = unsubscribe.where(\"date\", \"==\", \"\"))\r\n        : unsubscribe;\r\n\r\n    unsubscribe = unsubscribe.onSnapshot(snapshot => {\r\n      const newTasks = snapshot.docs.map(task => ({\r\n        id: task.id,\r\n        ...task.data()\r\n      }));\r\n\r\n      setTasks(\r\n        selectedProject === \"NEXT_7\"\r\n          ? newTasks.filter(\r\n              task =>\r\n                moment(task.date, \"DD-MM-YYYY\").diff(moment(), \"days\") <= 7 &&\r\n                task.archived !== true\r\n            )\r\n          : newTasks.filter(task => task.archived !== true) // else set task as new task\r\n      );\r\n      setArchivedTask(newTasks.filter(task => task.archived !== false))\r\n    });\r\n\r\n    return () => unsubscribe;\r\n  }, [selectedProject])\r\n\r\n  return {tasks, archivedTasks}\r\n};\r\n\r\nexport const useProjects = () => {\r\n    const [projects, setProjects] = useState([]);\r\n\r\n    useEffect(() => {\r\n        firebase.firestore()\r\n        .collection('projects')\r\n        .where('userId', '==', 'GhIyddUBs6IpAvzrKuDh')\r\n        .orderBy('projectId')\r\n        .get()\r\n        .then(snapshot => {\r\n            const allProjects = snapshot.docs.map(project => ({\r\n                ...project.data(),\r\n                docId: project.id,\r\n            }))\r\n            if (JSON.stringify(allProjects) !== JSON.stringify(projects)) {\r\n                setProjects(allProjects)   \r\n            }\r\n        })\r\n\r\n    }, [projects])\r\n\r\n    return { projects, setProjects }\r\n}\r\n//47\r\n","import React, {createContext, useContext, useState} from 'react'\r\n\r\n//1.36\r\nexport const SelectedProjectContext = createContext()\r\nexport const SelectedProjectProvider = ({children}) => {\r\n    const  [selectedProject, setSelectedProject] = useState('INBOX')\r\n\r\n    return (\r\n        <SelectedProjectContext.Provider value={{selectedProject, setSelectedProject}}>\r\n            {children}\r\n        </SelectedProjectContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useSelectedProjectValue = () => useContext(SelectedProjectContext)\r\n\r\n// what task we have to add in ","import React from 'react'\r\nimport {useProjectValue} from '../context'\r\nimport PropTyeps from 'prop-types'\r\n\r\nexport const ProjectOverlay = ({setProject, setShowProjectOverlay, showProjectOverlay}) => {\r\n    const {projects} = useProjectValue()\r\n\r\n    return (\r\n        projects && showProjectOverlay && (\r\n            <div className=\"project-overlay\" data-testid=\"project-overlay\">\r\n                <ul className='project-overlay__list'>\r\n                    {projects.map(project => (\r\n                        <li key={project.projectId}>\r\n                            <div\r\n                            data-testid='project-overlay-action'\r\n                        onClick={() => {\r\n                            setProject(project.projectId)\r\n                            setShowProjectOverlay(false)\r\n                        }}\r\n                        onKeyDown={() => {\r\n                            setProject(project.projectId)\r\n                            setShowProjectOverlay(false)\r\n                        }}\r\n                        role='button'\r\n                        tabIndex={0} \r\n                        aria-label='Select the task project'\r\n                        >\r\n                            {project.name}\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        )\r\n    )\r\n}\r\n\r\nProjectOverlay.propTypes = {\r\n    projects: PropTyeps.array,\r\n}","import React from \"react\";\r\nimport { FaTrello, FaSun, FaRegPaperPlane } from \"react-icons/fa\";\r\nimport moment from \"moment\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const TaskDate = ({ setTaskDate, setShowTaskDate, showTaskDate }) =>\r\n  showTaskDate && (\r\n    <div className=\"task-date\" data-testid=\"task-date-overlay\">\r\n      <ul className=\"task-date__list\">\r\n        <li>\r\n          <div\r\n            onClick={() => {\r\n              setShowTaskDate(false);\r\n              setTaskDate(moment().format(\"DD//MM/YYYY\"));\r\n            }}\r\n            onKeyDown={() => {\r\n                setShowTaskDate(false);\r\n                setTaskDate(moment().format(\"DD//MM/YYYY\"));\r\n              }}\r\n            data-testid=\"task-date-overlay\"\r\n            tabIndex={0}\r\n            aria-label=\"Select today as the task date\"\r\n            role=\"button\"\r\n          >\r\n            <span>\r\n              <FaTrello />\r\n            </span>\r\n            <span>Today</span>\r\n          </div>\r\n        </li>\r\n        <li>\r\n          <div \r\n          onClick={() => {\r\n            setShowTaskDate(false);\r\n            setTaskDate(\r\n              moment()\r\n                .add(1, \"day\")\r\n                .format(\"DD//MM/YYYY\")\r\n            );\r\n          }}\r\n          onKeyDown={() => {\r\n            setShowTaskDate(false);\r\n            setTaskDate(\r\n              moment()\r\n                .add(1, \"day\")\r\n                .format(\"DD//MM/YYYY\")\r\n            );\r\n          }}\r\n          data-testid=\"task-date-tomorrow\"\r\n          tabIndex={0}\r\n          role='button'\r\n        >\r\n          <span>\r\n            <FaSun />\r\n          </span>\r\n          <span>Tomorrow</span>\r\n          </div>\r\n        </li>\r\n        <li>\r\n          <div \r\n          onClick={() => {\r\n            setShowTaskDate(false);\r\n            setTaskDate(\r\n              moment()\r\n                .add(7, \"days\")\r\n                .format(\"DD//MM/YYYY\")\r\n            );\r\n          }}\r\n          onKeyDown={() => {\r\n            setShowTaskDate(false);\r\n            setTaskDate(\r\n              moment()\r\n                .add(7, \"days\")\r\n                .format(\"DD//MM/YYYY\")\r\n            );\r\n          }}\r\n          data-testid=\"task-date-next-week\"\r\n          tabIndex={0}\r\n          role='button'\r\n        >\r\n          <span>\r\n            <FaRegPaperPlane />\r\n          </span>\r\n          <span> Next Week</span>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n\r\n  TaskDate.prototype = {\r\n    setTaskDate: PropTypes.func.isRequired,\r\n    showTaskDate: PropTypes.func.isRequired,\r\n    setShowTaskDate: PropTypes.func.isRequired,\r\n  }","import React, { useState } from \"react\";\r\nimport { FaRegListAlt, FaRegCalendarAlt } from \"react-icons/fa\";\r\nimport moment from \"moment\";\r\nimport { firebase } from \"../firebase\";\r\nimport { useSelectedProjectValue } from \"../context\";\r\nimport { ProjectOverlay } from \"./ProjectOverlay\";\r\nimport { TaskDate } from \"./TaskDate\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddTask = ({\r\n  showAddTaskMain = true,\r\n  showShouldMain = false,\r\n  showQuickAddTask,\r\n  setShowQuickAddTask\r\n}) => {\r\n  const [task, setTask] = useState(\"\");\r\n  const [taskDate, setTaskDate] = useState(\"\");\r\n  const [project, setProject] = useState(\"\");\r\n  const [showMain, setShowMain] = useState(showShouldMain);\r\n  const [showProjectOverlay, setShowProjectOverlay] = useState(false);\r\n  const [showTaskDate, setShowTaskDate] = useState(false);\r\n  const { selectedProject } = useSelectedProjectValue();\r\n\r\n  const addTask = () => {\r\n    const projectId = project || selectedProject;\r\n    let collatedDate = \"\";\r\n\r\n    if (projectId === \"TODAY\") {\r\n      collatedDate = moment().format(\"DD/MM/YYYY\");\r\n    } else if (projectId === \"NEXT_7\") {\r\n      collatedDate = moment()\r\n        .add(7, \"days\")\r\n        .format(\"DD/MM/YYYY\");\r\n    }\r\n\r\n    return (\r\n      task &&\r\n      projectId &&\r\n      firebase\r\n        .firestore()\r\n        .collection(\"tasks\")\r\n        .add({\r\n          archived: false,\r\n          projectId,\r\n          task,\r\n          date: collatedDate || taskDate,\r\n          userId: \"GhIyddUBs6IpAvzrKuDh\"\r\n        })\r\n        .then(() => {\r\n          setTask(\"\");\r\n          setProject(\"\");\r\n          setShowMain(\"\");\r\n          setShowProjectOverlay(false);\r\n        })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={showQuickAddTask ? \"add-task add-task__overlay\" : \"add-task\"}\r\n      data-testid=\"add-task-comp\"\r\n    >\r\n      {showAddTaskMain && (\r\n        <div\r\n          className=\"add-task__shallow\"\r\n          data-testid=\"show-main-action\"\r\n          onClick={() => setShowMain(!showMain)}\r\n          onKeyDown={() => setShowMain(!showMain)}\r\n          role=\"button\"\r\n          tabIndex={0}\r\n        >\r\n          <span className=\"add-task__plus\">+</span>\r\n          <span className=\"add-task__text\">Add task</span>\r\n        </div>\r\n      )}\r\n      {(showMain || showQuickAddTask) && (\r\n        <div className=\"add-task__main\" data-testid=\"add-task-main\">\r\n          {showQuickAddTask && (\r\n            <>\r\n              <div className=\"\" data-testid=\"quick-add-task\">\r\n                <h2 className=\"header\">Quick add task</h2>\r\n                <span\r\n                  className=\"add-task__cancel-x\"\r\n                  data-testid=\"add-task-quick-cancel\"\r\n                  onClick={() => {\r\n                    setShowMain(false);\r\n                    setShowProjectOverlay(false);\r\n                    setShowQuickAddTask(false);\r\n                  }}\r\n                  onKeyDown={() => {\r\n                    setShowMain(false);\r\n                    setShowProjectOverlay(false);\r\n                    setShowQuickAddTask(false);\r\n                  }}\r\n                  role=\"button\"\r\n                  tabIndex={0}\r\n                >\r\n                  X\r\n                </span>\r\n              </div>\r\n            </>\r\n          )}\r\n          <ProjectOverlay\r\n            setProject={setProject}\r\n            setShowProjectOverlay={setShowProjectOverlay}\r\n            showProjectOverlay={showProjectOverlay}\r\n          />\r\n\r\n          <TaskDate\r\n            setTaskDate={setTaskDate}\r\n            showTaskDate={showTaskDate}\r\n            setShowTaskDate={setShowTaskDate}\r\n          />\r\n\r\n          <input\r\n            type=\"text\"\r\n            className=\"add-task__content\"\r\n            data-testid=\"add-task-content\"\r\n            value={task}\r\n            onChange={e => setTask(e.target.value)}\r\n          />\r\n          <button\r\n            type=\"button\"\r\n            className=\"add-task__submit\"\r\n            data-testid=\"add-task\"\r\n            onClick={() =>\r\n              showQuickAddTask\r\n                ? addTask() && setShowQuickAddTask(false)\r\n                : addTask()\r\n            }\r\n          >\r\n            Add Task\r\n          </button>\r\n          {!showQuickAddTask && (\r\n            <span\r\n              className=\"add-task__cancel\"\r\n              data-testid=\"add-task-main-cancel\"\r\n              onClick={() => {\r\n                setShowMain(false);\r\n                setShowProjectOverlay(false);\r\n              }}\r\n              onKeyDown={() => {\r\n                setShowMain(false);\r\n                setShowProjectOverlay(false);\r\n              }}\r\n              tabIndex={0}\r\n              role=\"button\"\r\n            >\r\n              Cancel\r\n            </span>\r\n          )}\r\n          <span\r\n            className=\"add-task__project\"\r\n            data-testid=\"show-project-overlay\"\r\n            onClick={() => setShowProjectOverlay(!showProjectOverlay)}\r\n            onKeyDown={() => setShowProjectOverlay(!showProjectOverlay)}\r\n            tabIndex={0}\r\n            role=\"button\"\r\n          >\r\n            <FaRegListAlt />\r\n          </span>\r\n          <span\r\n            className=\"add-task__date\"\r\n            data-testid=\"show-date-overlay\"\r\n            onClick={() => setShowTaskDate(!showTaskDate)}\r\n            onKeyDown={() => setShowTaskDate(!showTaskDate)}\r\n            tabIndex={0}\r\n            role=\"button\"\r\n          >\r\n            <FaRegCalendarAlt />\r\n          </span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nAddTask.propTypes = {\r\n  showAddTaskMain: PropTypes.bool,\r\n  showShouldMain: PropTypes.bool,\r\n  showQuickAddTask: PropTypes.bool,\r\n  setShowQuickAddTask: PropTypes.func\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { FaCloudMoon } from \"react-icons/fa\";\r\nimport { AddTask } from \"../AddTask\";\r\nimport PropTypes from \"prop-types\";\r\nimport logo from './icon.svg'\r\n\r\nexport const Header = ({ darkMode, setDarkMode }) => {\r\n  const [shouldShowMain, setShouldShowMain] = useState(false);\r\n  const [showQuickAddTask, setShowQuickAddTask] = useState(false);\r\n  return (\r\n    <header className=\"header\" data-testid=\"header\">\r\n      <nav>\r\n        <div className=\"logo\">\r\n          <img src={logo} alt=\"Todolist\" style={{width: '40px', backgroundColor: 'white', borderRadius: '50%'}} />\r\n        </div>\r\n        <div className=\"settings\">\r\n          <ul>\r\n            <li\r\n              aria-label=\"Quick Add Task\"\r\n              data-testid=\"quick-add-task-action\"\r\n              className=\"settings__add\"\r\n              onClick={() => {\r\n                setShowQuickAddTask(true);\r\n                setShouldShowMain(true);\r\n              }}\r\n              onKeyDown={() => {\r\n                setShowQuickAddTask(true);\r\n                setShouldShowMain(true);\r\n              }}\r\n            >\r\n              +\r\n            </li>\r\n            <li\r\n              onClick={() => setDarkMode(!darkMode)}\r\n              data-testid=\"dark-mode-action\"\r\n              aria-label=\"Dark mode\"\r\n              className=\"settings__darkmode\"\r\n            >\r\n              <FaCloudMoon />\r\n            </li>\r\n          </ul>\r\n          <h2 className=\"app-heading\">Todoist</h2>\r\n        </div>\r\n      </nav>\r\n      <AddTask\r\n        showAddTaskMain={false}\r\n        shouldShowMain={shouldShowMain}\r\n        showQuickAddTask={showQuickAddTask}\r\n        setShowQuickAddTask={setShowQuickAddTask}\r\n      />\r\n    </header>\r\n  );\r\n};\r\n//3.35\r\nHeader.propTypes = {\r\n  darkMode: PropTypes.bool.isRequired,\r\n  setDarkMode: PropTypes.func.isRequired,\r\n};\r\n","import React, {useState} from 'react'\r\nimport {FaTrashAlt} from 'react-icons/fa'\r\nimport {useSelectedProjectValue, useProjectValue} from '../context'\r\nimport {firebase} from '../firebase'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const IndividualProject = ({project}) => {\r\n    const [showConfirm, setShowConfirm] = useState(false)\r\n    const {projects, setProjects} = useProjectValue()\r\n    const {setSelectedProject} = useSelectedProjectValue()\r\n    // take delete confirmation from user & assign to firebase\r\n    const deleteProject = docId => {\r\n        firebase.firestore()\r\n        .collection('projects')\r\n        .doc(docId)\r\n        .delete()\r\n        .then(() => {\r\n            setProjects([...projects])\r\n            setSelectedProject('INBOX'); // refresh all\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n      <span className=\"sidebar__dot\">•</span>\r\n      <span className=\"sidebar__project-name\">{project.name}</span>\r\n      <span\r\n        className=\"sidebar__project-delete\"\r\n        data-testid=\"delete-project\"\r\n        onClick={() => setShowConfirm(!showConfirm)}\r\n        onKeyDown={() => setShowConfirm(!showConfirm)}\r\n        tabIndex={0}\r\n        role=\"button\"\r\n        aria-label=\"Confirm deletion of project\"\r\n      >\r\n        <FaTrashAlt />\r\n        {showConfirm && (\r\n          <div className=\"project-delete-modal\">\r\n            <div className=\"project-delete-modal__inner\">\r\n              <p>Are you sure you want to delete this project?</p>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => deleteProject(project.docId)}\r\n              >\r\n                Delete\r\n              </button>\r\n              <span\r\n                onClick={() => setShowConfirm(!showConfirm)}\r\n                onKeyDown={() => setShowConfirm(!showConfirm)}\r\n                tabIndex={0}\r\n                role=\"button\"\r\n                aria-label=\"Cancel adding project, do not delete\"\r\n              >\r\n                Cancel\r\n              </span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </span>\r\n    </>\r\n    )\r\n}\r\n\r\nIndividualProject.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n}","import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { useSelectedProjectValue, useProjectValue } from \"../context\";\r\nimport { IndividualProject } from \"./IndividualProject\";\r\n\r\nexport const Projects = ({ activeValue = true }) => {\r\n  const [active, setActive] = useState(activeValue);\r\n  const { setSelectedProject } = useSelectedProjectValue();\r\n  const { projects } = useProjectValue();\r\n  // console.log(projects);\r\n\r\n  return (\r\n    projects &&\r\n    projects.map(project => (\r\n      <li\r\n        key={project.projectId}\r\n        data-doc-id={project.docId}\r\n        data-testid=\"project-action\" // parent\r\n        className={\r\n          active === project.projectId\r\n            ? \"active sidebar__project\"\r\n            : \"sidebar__project\"\r\n        }\r\n      >\r\n        <div\r\n          role=\"button\"\r\n          data-testid=\"project-action\"\r\n          tabIndex={0}\r\n          aria-label={`Select ${project.name} as the task project`}\r\n          onKeyDown={() => {\r\n            setActive(project.projectId);\r\n            setSelectedProject(project.projectId);\r\n          }}\r\n          onClick={() => {\r\n            setActive(project.projectId);\r\n            setSelectedProject(project.projectId);\r\n          }}\r\n        >\r\n          {/* {JSON.stringify(project)} */}\r\n          <IndividualProject project={project} />\r\n        </div>\r\n      </li>\r\n    ))\r\n  );\r\n};\r\n\r\nIndividualProject.propTyeps = {\r\n    activeValue: PropTypes.bool\r\n}","import React, {useState} from 'react'\r\nimport {firebase} from '../firebase'\r\nimport {generatePushId} from '../helpers'\r\nimport {useProjectValue} from '../context'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddProject = ({shouldshow = false}) => {\r\n    const [show, setShow] = useState(shouldshow)\r\n    const [projectName, setProjectName] = useState()\r\n    const projectId = generatePushId()\r\n    const {projects, setProjects} = useProjectValue() /// get project fom firebase\r\n\r\n    const addProject = () => projectName &&\r\n        firebase.firestore()\r\n        .collection('projects')\r\n        .add({\r\n            projectId,\r\n            name: projectName,\r\n            userId: 'GhIyddUBs6IpAvzrKuDh'\r\n    })\r\n    .then(() => {\r\n        setProjects([...projects])\r\n        setProjectName('')\r\n        setShow(false)\r\n    })\r\n\r\n    return (\r\n        \r\n        <div className=\"add-project\" data-testid='add-project'>\r\n            {show && (\r\n                <div className='add-project__input'>\r\n                <input value={projectName}\r\n                onChange={e => setProjectName(e.target.value)}\r\n                className='add-project__name'\r\n                data-testid='project-name'\r\n                type='text'\r\n                placeholder='Name your project'\r\n                />\r\n                <button className='add-project__submit'\r\n                type='button'\r\n                onClick={() => addProject()}\r\n                data-testid='add-project-submit'>\r\n                    Add Project\r\n                </button>\r\n                <span data-testid='hide-project-overlay'\r\n                className='add-project__cancel'\r\n                aria-label=\"Cancel adding project\"\r\n                onClick={() => setShow(false)}\r\n                onKeyDown={() => setShow(false)}\r\n                role=\"button\"\r\n                tabIndex={0} >Cancel\r\n                </span>\r\n                </div>\r\n                \r\n            )}\r\n            <span className='add-project__plus'>+</span>\r\n            <span data-testid='add-project-action'\r\n                className='add-project__text'\r\n                onClick={() => setShow(!show)}\r\n                onKeyDown={() => setShow(!show)}\r\n                role=\"button\"\r\n                tabIndex={0} >Add Project\r\n            </span>\r\n        </div>\r\n        \r\n    )\r\n} \r\n\r\nAddProject.prototype = {\r\n    shouldShow: PropTypes.bool\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  FaChevronDown,\r\n  FaInbox,\r\n  FaRegCalendarAlt,\r\n  FaRegCalendar\r\n} from \"react-icons/fa\";\r\nimport { useSelectedProjectValue } from \"../../context\";\r\nimport { Projects } from \"../Projects\";\r\nimport { AddProject } from \"../AddProject\";\r\n\r\nexport const Sidebar = () => {\r\n  const { setSelectedProject } = useSelectedProjectValue();\r\n  const [active, setActive] = useState(\"inbox\");\r\n  const [showProjects, setShowProjects] = useState(true);\r\n\r\n  return (\r\n    <div className=\"sidebar\" data-testid=\"sidebar\">\r\n      <ul className=\"sidebar__generic\">\r\n        <li\r\n          data-testid=\"inbox\"\r\n          className={active === \"inbox\" ? \"active\" : undefined}\r\n        >\r\n          <div\r\n            data-testid=\"inbox-action\"\r\n            aria-label=\"Show inbox tasks\"\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            onClick={() => {\r\n              setActive(\"inbox\");\r\n              setSelectedProject(\"INBOX\");\r\n            }}\r\n            onKeyDown={() => {\r\n              setActive(\"inbox\");\r\n              setSelectedProject(\"INBOX\");\r\n            }}\r\n          >\r\n            <span tabIndex={0}>\r\n              <FaInbox />\r\n            </span>\r\n            <span>Inbox</span>\r\n          </div>\r\n        </li>\r\n        <li\r\n          data-testid=\"today\"\r\n          className={active === \"today\" ? \"active\" : undefined}\r\n        >\r\n          <div\r\n            data-testid=\"today-action\"\r\n            aria-label=\"Show today's tasks\"\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            onClick={() => {\r\n              setActive(\"today\");\r\n              setSelectedProject(\"TODAY\");\r\n            }}\r\n            onKeyDown={() => {\r\n              setActive(\"today\");\r\n              setSelectedProject(\"TODAY\");\r\n            }}\r\n          >\r\n            <span>\r\n              <FaRegCalendar />\r\n            </span>\r\n            <span>Today</span>\r\n          </div>\r\n        </li>\r\n\r\n        <li\r\n          data-testid=\"next_7\"\r\n          className={active === \"next_7\" ? \"active\" : undefined}\r\n        >\r\n          <div\r\n            data-testid=\"next_7-action\"\r\n            aria-label=\"Show tasks for the next 7 days\"\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            onClick={() => {\r\n              setActive(\"next_7\");\r\n              setSelectedProject(\"NEXT_7\");\r\n            }}\r\n            onKeyDown={() => {\r\n              setActive(\"next_7\");\r\n              setSelectedProject(\"NEXT_7\");\r\n            }}\r\n          >\r\n            <span>\r\n              <FaRegCalendarAlt />\r\n            </span>\r\n            <span>Next 7 days</span>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n      <div\r\n        className=\"sidebar__middle\"\r\n        onClick={() => setShowProjects(!showProjects)}\r\n        onKeyDown={() => setShowProjects(!showProjects)}\r\n        role=\"button\"\r\n        tabIndex={0}\r\n      >\r\n        <span>\r\n          <FaChevronDown\r\n            className={!showProjects ? \"hidden-projects\" : undefined}\r\n          />\r\n        </span>\r\n        <h2>Project</h2>\r\n      </div>\r\n\r\n      <ul className=\"sidebar__projects\">{showProjects && <Projects />}</ul>\r\n      {setShowProjects && <AddProject />}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { firebase } from '../firebase';\r\n\r\nexport const Checkbox = ({ id, taskDesc }) => {\r\n  const archiveTask = () => {\r\n    firebase\r\n      .firestore()\r\n      .collection('tasks')\r\n      .doc(id)\r\n      .update({\r\n        archived: true,\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"checkbox-holder\"\r\n      data-testid=\"checkbox-action\"\r\n      onClick={() => archiveTask()}\r\n      onKeyDown={() => archiveTask()}\r\n      aria-label={`Mark ${taskDesc} as done?`}\r\n      role=\"button\"\r\n      tabIndex={0}\r\n    >\r\n      <span className=\"checkbox\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nCheckbox.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  taskDesc: PropTypes.string.isRequired,\r\n}","import React, {useEffect} from \"react\";\r\nimport {Checkbox} from './Checkbox'\r\nimport {useTasks} from '../hooks'\r\nimport { collatedTasks } from \"../constants\";\r\nimport { getTitle, getCollatedTitle, collatedTasksExist } from '../helpers'\r\nimport { useSelectedProjectValue, useProjectValue } from '../context'\r\nimport { AddTask } from \"./AddTask\";\r\n\r\nexport const Tasks = () => {\r\n  const {selectedProject} = useSelectedProjectValue()\r\n  const {projects} = useProjectValue()\r\n  const {tasks} = useTasks(selectedProject)\r\n    // console.log(tasks);\r\n    \r\n  let projectName = \"\";\r\n\r\n  if (projects && projects.length > 0 && selectedProject && !collatedTasksExist(selectedProject)) {\r\n    projectName= getTitle(projects, selectedProject).name\r\n    // console.log('projectName: 1', projectName)\r\n  }\r\n\r\n  if (collatedTasksExist(selectedProject) && selectedProject) {\r\n    projectName = getCollatedTitle(collatedTasks, selectedProject).name\r\n    // console.log('projectName: 1', projectName)\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = `${projectName}: Todoist`;\r\n  })\r\n\r\n  return (\r\n    <div className=\"tasks\" data-testid=\"tasks\">\r\n      <h2 data-testid=\"project-name\">{projectName}</h2>\r\n      <ul className=\"tasks__list\">\r\n        {tasks.map(task => (\r\n          <li key={`${task.id}`}>\r\n            <Checkbox id={task.id} />\r\n            <span>{task.task}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <AddTask/>\r\n    </div>\r\n  );\r\n};","import React from 'react'\r\nimport {Sidebar} from './Sidebar'\r\nimport {Tasks} from '../Tasks'\r\n\r\nexport const Content = () => (\r\n    <section className='content'>\r\n        <Sidebar />\r\n        <Tasks />\r\n    </section>\r\n)","import React,{useState} from \"react\";\nimport {Header} from \"./component/layout/Header\";\nimport { Content } from \"./component/layout/Content\";\nimport PropTypes from 'prop-types'\nimport { ProjectsProvider, SelectedProjectProvider } from \"./context\";\n// import Auth from './Auth'\n\nconst App = ({ darkModeDefault = false }) => {\n  const [darkMode, setDarkMode] = useState(darkModeDefault)\n  return (\n    <SelectedProjectProvider>\n      \n      <ProjectsProvider>\n        <main data-testid='application'\n        className={darkMode ? 'darkmode' : undefined} >\n          <Header darkMode={darkMode} setDarkMode={setDarkMode} />\n          <Content />\n          </main>\n      </ProjectsProvider>\n      \n    </SelectedProjectProvider>\n  );\n};\n\nexport default App;\n\nApp.propTypes = {\n  darkModeDefault: PropTypes.bool\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./App.scss\";\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}